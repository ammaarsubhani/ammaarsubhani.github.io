{"version":3,"file":"bundle.js","mappings":";qIAAA,IAAMA,EAA2B,CAC/BC,MAAO,OACPC,QAAS,yBAGLC,EAAW,SAACF,EAAeG,GAC/BJ,EAAYE,QACA,SAAVD,EAAmB,qBAAuB,wBAC5CG,EAAIC,YAAcL,EAAYE,QAC9BF,EAAYC,MAAQA,EACpBK,SAASC,KAAKC,UAAUC,OACA,SAAtBT,EAAYC,MAAmB,QAAU,QAE3CK,SAASC,KAAKC,UAAUE,IAAIV,EAAYC,OACxCU,aAAaC,QAAQ,QAASZ,EAAYC,MAC5C,ICdIY,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaE,QAGrB,IAAIC,EAASN,EAAyBE,GAAY,CAGjDG,QAAS,CAAC,GAOX,OAHAE,EAAoBL,GAAUI,EAAQA,EAAOD,QAASJ,GAG/CK,EAAOD,OACf,CCrBAJ,EAAoBO,EAAI,CAACH,EAASI,KACjC,IAAI,IAAIC,KAAOD,EACXR,EAAoBU,EAAEF,EAAYC,KAAST,EAAoBU,EAAEN,EAASK,IAC5EE,OAAOC,eAAeR,EAASK,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDT,EAAoBU,EAAI,CAACK,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,GCClFhB,EAAoBoB,EAAKhB,IACH,oBAAXiB,QAA0BA,OAAOC,aAC1CX,OAAOC,eAAeR,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DZ,OAAOC,eAAeR,EAAS,aAAc,CAAEmB,OAAO,GAAO,oFCFxDC,EACJhC,SAASiC,eAAe,qBAID,SAAvB5B,aAAaV,OAEX,UAAWU,cACX6B,OAAOC,WAAW,gCAAgCC,SAKpDvC,EAAAA,EAAAA,UAAS,QAASmC,IAFlBnC,EAAAA,EAAAA,UAAS,OAAQmC,GAGlB,EAEYK,iBAAiB,SAAS,WACjCrC,SAASC,KAAKC,UAAUoC,SAAS,SACnCzC,EAAAA,EAAAA,UAAS,QAASmC,GACThC,SAASC,KAAKC,UAAUoC,SAAS,WAC1CzC,EAAAA,EAAAA,UAAS,OAAQmC,EAErB","sources":["webpack://ammaarsubhani.github.io/./src/utils/theme.ts","webpack://ammaarsubhani.github.io/webpack/bootstrap","webpack://ammaarsubhani.github.io/webpack/runtime/define property getters","webpack://ammaarsubhani.github.io/webpack/runtime/hasOwnProperty shorthand","webpack://ammaarsubhani.github.io/webpack/runtime/make namespace object","webpack://ammaarsubhani.github.io/./src/script.ts"],"sourcesContent":["const themeConfig: ThemeConfig = {\r\n  theme: \"dark\",\r\n  btnText: \"Let there be darkness\",\r\n};\r\n\r\nconst setTheme = (theme: Themes, btn: HTMLButtonElement): void => {\r\n  themeConfig.btnText =\r\n    theme === \"dark\" ? \"Let there be light\" : \"Let there be darkness\";\r\n  btn.textContent = themeConfig.btnText;\r\n  themeConfig.theme = theme;\r\n  document.body.classList.remove(\r\n    themeConfig.theme === \"dark\" ? \"light\" : \"dark\"\r\n  );\r\n  document.body.classList.add(themeConfig.theme);\r\n  localStorage.setItem(\"theme\", themeConfig.theme);\r\n};\r\n\r\nexport { setTheme };\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import \"./scss/styles.scss\";\r\nimport { setTheme } from \"./utils/theme\";\r\n\r\nconst darkLightBtn = <HTMLButtonElement>(\r\n  document.getElementById(\"dark-light-toggle\")\r\n);\r\n\r\nif (\r\n  localStorage.theme === \"dark\" ||\r\n  !(\r\n    \"theme\" in localStorage &&\r\n    window.matchMedia(\"(prefers-color-scheme: dark)\").matches\r\n  )\r\n) {\r\n  setTheme(\"dark\", darkLightBtn);\r\n} else {\r\n  setTheme(\"light\", darkLightBtn);\r\n}\r\n\r\ndarkLightBtn.addEventListener(\"click\", () => {\r\n  if (document.body.classList.contains(\"dark\")) {\r\n    setTheme(\"light\", darkLightBtn);\r\n  } else if (document.body.classList.contains(\"light\")) {\r\n    setTheme(\"dark\", darkLightBtn);\r\n  }\r\n});\r\n"],"names":["themeConfig","theme","btnText","setTheme","btn","textContent","document","body","classList","remove","add","localStorage","setItem","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","d","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","darkLightBtn","getElementById","window","matchMedia","matches","addEventListener","contains"],"sourceRoot":""}